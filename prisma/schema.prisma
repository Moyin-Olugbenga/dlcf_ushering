// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LOCATION {
  EDE_ROAD
  DAMICO
  RELIGION_GROUND
  ELEYELE
  ROAD7
  PG
  CORPERS
  MOREMI
  OMOLE
  QUARTERS
  AJEBAMIDELE
  IJEDU
  URBAN_DAY
  OAU_THC
  KOIWO
  CDL
}

enum SERVICE {
  MBS
  SWS
  TRH
  SWM
  GCK_DAY1
  GCK_DAY2
  GCK_DAY3
  GCK_DAY4
  GCK_DAY5
  GCK_DAY6
}

enum AttendanceType {
  STUDENT
  NON_STUDENT
  YOUTH
  CHILDREN
  GUEST
  CONVERT
  NEWCOMER
}

model Admin {

  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())
  
  username                          String                          @unique
  pass                              String
  password                          String                          


  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

model Attendance {
  
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())


  recordedBy                        String
  location                          LOCATION
  service                           SERVICE
  breakdowns                        AttendanceBreakdown[] 
  totalMale                         Int
  totalFemale                       Int
  total                             Int 
  attendanceDate                    DateTime

  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt

}

model AttendanceBreakdown {
  
  id                                Int                             @id @default(autoincrement())
  uuid                              String                          @unique @default(uuid())
  
  attendanceId                      String
  type                              AttendanceType
  attendance                        Attendance                      @relation(fields: [attendanceId], references: [uuid])

  male                              Int
  female                            Int
  
  createdAt                         DateTime                        @default(now())
  updatedAt                         DateTime                        @updatedAt
}
